/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mainPackage;

import java.awt.Font;
import java.awt.Point;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author danil
 */
public class teachersForm extends javax.swing.JFrame {

    private static final String DB_URL = "jdbc:sqlite:teacher.db";
    Font font = new Font("Segoe UI", Font.PLAIN, 14);
    final int[] cY = {10};
    final int vGap = 10;
    final int defHeight = 30;
    /**
     * Creates new form teachersForm
     */
    public teachersForm() {
        initComponents();
        showTeacherButtons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 150));

        backButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        backButton.setText("Назад");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton)
                .addContainerGap(541, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(254, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.dispose();
        FirstContentForm content = new FirstContentForm();
        content.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(teachersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(teachersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(teachersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(teachersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new teachersForm().setVisible(true);
            }
        });
    }
    
    
    private void showTeacherButtons() {
    authForm auth = new authForm();
    String login = auth.getLogin();
    String query = "SELECT teacher_lastname, teacher_login FROM Teachers WHERE is_visible = 1";
    String curUser = auth.getFlag();
    int curUserID = auth.getTeacherID();
    
    
    
    try (Connection conn = DriverManager.getConnection(DB_URL);
         Statement stmt = conn.createStatement();
         ResultSet rs = stmt.executeQuery(query)) {
        int startX = backButton.getX();
        int startY = backButton.getY();
        int btnWidth = 150;
        int btnHeight = 40;
        int horizontalGap = 10;
        int verticalGap = 10;
        
        int curX = startX;
        int curY = startY + 50;
        
        int formH = getContentPane().getHeight();
        int formW = getContentPane().getWidth();
        List<TeacherData> teachers = new ArrayList<>();
        while (rs.next()) {
            String teacherLogin = rs.getString("teacher_login");
            String lastName = rs.getString("teacher_lastname");
            teachers.add(new TeacherData(teacherLogin, lastName));
        }
        for (TeacherData teacher : teachers)
        {
            JButton btn = new JButton(teacher.lastName);
            btn.setBounds(curX, curY, btnWidth, btnHeight);
            if (curY + btnHeight > formH - 50)
            {
               curX += btnWidth + horizontalGap;
               curY = startY;
               
               if (curX + btnWidth > formW - 20)
               {
                   break;
               }
            }
            btn.setFont(font);
            getContentPane().add(btn);
            curY += btnHeight + verticalGap;
            btn.addActionListener((e) -> {
                JFrame teacherFrame = new JFrame();
                teacherFrame.setSize(515, 600);
                JPanel mainPanel = new JPanel();
                mainPanel.setLayout(null);
                teacherFrame.getContentPane().add(mainPanel);
                teacherFrame.setLocation(500, 150);
                teacherFrame.setVisible(true);
                teacherFrame.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                this.dispose();
                JButton backsButton = new JButton("Назад");
                backsButton.setFont(font);
                backsButton.setBounds(10, 10, 80, 40);
                backsButton.addActionListener((ev) -> {
                    teacherFrame.dispose();
                    this.setVisible(true);
                });
                mainPanel.add(backsButton);
                boolean isTeacher = !login.isEmpty() && teacher.teacherLogin.equals(curUser);
                String getTheme;
                if (isTeacher)
                {
                    getTheme = "SELECT theme_name FROM Themes WHERE theme_owner = ?";
                }
                else
                {
                    getTheme = "SELECT theme_name FROM Themes WHERE teacher_login = ?";
                }
                List<Themes> themes = new ArrayList<>();
                try (Connection newConn = DriverManager.getConnection(DB_URL);
                        PreparedStatement newStmt = newConn.prepareStatement(getTheme))
                {
                    newStmt.setString(1, login);
                    ResultSet newRs = newStmt.executeQuery();
                    while (newRs.next())
                    {
                        String themeName = newRs.getString("theme_name");
                        themes.add(new Themes(themeName));
                    }
                    int mStartY = backsButton.getY() + backsButton.getHeight() + 20;
                    int mBtnWidth = teacherFrame.getWidth() - 40;
                    int mBtnHeight = 40;
                    int mVerticalGap = 10;
                    int mCurY = mStartY;
                    for (Themes theme : themes)
                    {
                        if (mCurY + mBtnHeight > teacherFrame.getHeight() - 50)
                        {
                            JButton nextPage = new JButton("Следующая страница");
                            nextPage.setFont(font);
                            nextPage.setBounds(290, 510, 200, 40);
                            mainPanel.add(nextPage);
                            break;
                        }
                        JButton module = new JButton(theme.theme_name);
                        module.setFont(font);
                        module.setBounds(10, mCurY, mBtnWidth, mBtnHeight);
                        mainPanel.add(module);
                        mCurY += mBtnHeight + mVerticalGap;
                    }
                    revalidate();
                }
                catch (Exception ex)
                {
                    ex.printStackTrace();
                }
                String teacherLogin = teacher.teacherLogin;
                if (isTeacher)
                {
                    //Main module form
                    
                    JButton newModule = new JButton("Создать новый модуль");
                    newModule.setFont(font);
                    newModule.setBounds(10, 515, 250, 40);
                    mainPanel.add(newModule);
                    newModule.addActionListener((evnt) -> {
                        JFrame newModuleForm = new JFrame();
                        newModuleForm.setSize(515, 600);
                        newModuleForm.setLocation(740, 150);
                        newModuleForm.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                        JPanel modulePanel = new JPanel(null);
                        newModuleForm.add(modulePanel);
                        
                        //Edit module form
                        
                        JFrame editorForm = new JFrame();
                        editorForm.setSize(650, 650);
                        editorForm.setLocation(100, 150);
                        JPanel editorPanel = new JPanel(null);
                        editorForm.add(editorPanel);
                        
                        //Module name
                        JLabel mName = new JLabel();
                        mName.setText("Введите название модуля:");
                        mName.setBounds(10, 5, 200, 40);
                        mName.setFont(font);
                        editorPanel.add(mName);
                        
                        JTextField mNameText = new JTextField();
                        mNameText.setBounds(10, 35, 200, 30);
                        mNameText.setFont(font);
                        editorPanel.add(mNameText);
                        
                        
                        //Theme name
                        JLabel titleThemeLabel = new JLabel();
                        titleThemeLabel.setText("Заголовок:");
                        titleThemeLabel.setFont(font);
                        titleThemeLabel.setBounds(220, 5, 150, 40);
                        editorPanel.add(titleThemeLabel);
                        
                        JTextField titleTextField = new JTextField();
                        titleTextField.setFont(font);
                        titleTextField.setBounds(220, 35, 200, 30);
                        editorPanel.add(titleTextField);
                        
                        
                        //Default parameters
                        int sX = 10;
                        int sY = 10;
                        int cX = sX;
                        
                        
                        JButton addTitleButton = new JButton("Добавить заголовок");
                        addTitleButton.setBounds(430, 35, 200, 30);
                        addTitleButton.setFont(font);
                        editorPanel.add(addTitleButton);
                        addTitleButton.addActionListener((evn) -> {
                            JLabel title = new JLabel();
                            title.setFont(new Font("Segoe UI", Font.BOLD, 18));
                            title.setHorizontalAlignment(0);
                            title.setVerticalAlignment(0);
                            title.setHorizontalTextPosition(0);
                            title.setText(titleTextField.getText());
                            title.setBounds(cX, cY[0], 500, defHeight);
                            modulePanel.add(title);
                            
                            cY[0] += defHeight + vGap;
                            newModuleForm.revalidate();
                            newModuleForm.repaint();
                        });
                        
                        //Content
                        JLabel content = new JLabel();
                        content.setText("Введите текст или выберите файл:");
                        content.setFont(font);
                        content.setBounds(10, 55, 250, 40);
                        editorPanel.add(content);
                        
                        JCheckBox isText = new JCheckBox();
                        isText.setText("Текст");
                        JTextArea contentArea = new JTextArea();
                        JTextField fileField = new JTextField();
                        contentArea.setFont(font);
                        contentArea.setVisible(false);
                        contentArea.setBounds(10, 115, 600, 250);
                        editorPanel.add(contentArea);
                        fileField.setFont(font);
                        fileField.setBounds(10, 115, 200, 30);
                        editorPanel.add(fileField);
                        JButton addContent = new JButton("Добавить контент");
                        addContent.setFont(font);
                        addContent.setBounds(10, 150, 150, 30);
                        editorPanel.add(addContent);
                        isText.addItemListener((ls) -> {
                            if (ls.getStateChange() == ItemEvent.SELECTED)
                            {
                                fileField.setVisible(false);
                                contentArea.setVisible(true);
                                addContent.setBounds(10, 370, 150, 30);
                                addContent.addActionListener((ev) -> {
                                    JLabel newContent = new JLabel();
                                    newContent.setFont(font);
                                    newContent.setBounds(cX, cY[0], modulePanel.getWidth(), defHeight + 50);
                                    newContent.setText(contentArea.getText());
                                    modulePanel.add(newContent);
                                    
                                    cY[0] += defHeight + vGap + 20;
                                    newModuleForm.revalidate();
                                    newModuleForm.repaint();
                                });
                            }
                            else
                            {
                                fileField.setVisible(true);
                                contentArea.setVisible(false);
                                addContent.setBounds(10, 150, 150, 30);
                            }
                            editorForm.revalidate();
                            editorForm.repaint();
                        });
                        isText.setBounds(10, 85, 100, 40);
                        editorPanel.add(isText);
                        
                        
                        
                        teacherFrame.dispose();
                        newModuleForm.setVisible(true);
                        editorForm.setVisible(true);
                    });
                }
                
            });
        }
        revalidate();
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
    
    
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    // End of variables declaration//GEN-END:variables
}
